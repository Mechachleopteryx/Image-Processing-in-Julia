var documenterSearchIndex = {"docs":
[{"location":"democards/dip/#dip_index-1","page":"DIP 示例代码","title":"《数字图像处理》示例代码","text":"","category":"section"},{"location":"democards/dip/#","page":"DIP 示例代码","title":"DIP 示例代码","text":"《数字图像处理》第三版[1]及第四版[2]中涉及到的一些例子以及习题的Julia实现，主要以第三版为主。代码分成两部分，第一部分是根据书中 叙述的内容来动手实现其功能，第二部分是作为调包侠来直接使用 JuliaImages 提供的功能。","category":"page"},{"location":"democards/dip/#","page":"DIP 示例代码","title":"DIP 示例代码","text":"note: Note\n国内数字图像处理[1]存在中文版及英文原版，本文档写作时主要参考的是英文原版，因此中文叙述可能与中文版中不太一致。","category":"page"},{"location":"democards/dip/#参考文献-1","page":"DIP 示例代码","title":"参考文献","text":"","category":"section"},{"location":"democards/dip/#","page":"DIP 示例代码","title":"DIP 示例代码","text":"[1] Gonzalez, Rafael C., Richard E. Woods, and Barry R. Masters. \"Digital image processing third edition.\" Pearson International Edition (2008). 中文版\n[2] Gonzalez, Rafael C., and Richard E. Woods \"Digital image processing fourth edition.\" Pearson (2017).","category":"page"},{"location":"democards/tutorials/#tutorials_index-1","page":"JuliaImages 入门","title":"JuliaImages 入门","text":"","category":"section"},{"location":"#Julia-数字图像处理-1","page":"Home","title":"Julia 数字图像处理","text":"","category":"section"},{"location":"#简介-1","page":"Home","title":"简介","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"目前国内高校数字图像处理课程主要以 Image Processing ToolBox (MATLAB) 和 OpenCV (C++/Python) 为主。因为其语言简单、工具可靠方便，MATLAB 一直属于主流的教学语言。近年来随着 Python 及开源软件的普及和推广， 一些课程开始选择采用 Python 进行围绕 OpenCV 的教学，当然有一些计算机和电子技术专业的课程也会采用 C++ 来进行教学。","category":"page"},{"location":"#","page":"Home","title":"Home","text":"作为下一代高性能计算语言, Julia 允许我们在不涉及 C 语言的情况下以更少地精力来实现更高效的代码，JuliaImages 是基于 Julia 开发的高性能通用图像处理工具箱，其特点是：","category":"page"},{"location":"#","page":"Home","title":"Home","text":"纯 Julia 开发，代码易读易写\n高性能：有很高的性能上限 + 达到性能上限比较容易\n比 Python 更加开放的生态环境\n支持高维矩阵处理：MRI、视频序列、三维空间","category":"page"},{"location":"#","page":"Home","title":"Home","text":"关于 Julia 的特点，可以阅读博客Julia 1.0 正式发布 以及 为什么我们要创造Julia。 尽管 Julia 是一门高性能计算语言， 但是这并不意味着实现高性能是一件很容易的事情。实际上，如果不加以训练的话，用 Julia 写出 Python 的速度也是很有可能的。 由于这个原因，本文档有两个目的：","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Julia 下数字图像处理的入门与提高\n如何实现一个高效的图像处理算法","category":"page"},{"location":"#","page":"Home","title":"Home","text":"为了达到这个目的，本文档由两部分组成：","category":"page"},{"location":"#","page":"Home","title":"Home","text":"JuliaImages 入门是一些关于 Julia 及 Julia 下图像处理的系列导论，它介绍 了 JuliaImages 的基本生态以及一些 Julia 下的编程实践，这里面的内容一部分来源于 Julia 官方文档 以及 JuliaImages 官方文档。 推荐按顺序阅读。\nDIP示例代码 用 Julia 实现了[1]和[2]中涉及到的一些例子和习题，可以与教材[1]和 JuliaImages 入门 配套使用。之所以选择实现[1]的原因是它比较适合数字图像处理的初学者（一二年级本科生）。 可以按照任意顺序阅读。","category":"page"},{"location":"#","page":"Home","title":"Home","text":"warning: Warning\n🚧 目前 JuliaImages 还处于早期开发阶段，尽管已经能够满足大部分科研需求，但是还并不适合调包党来无脑使用。","category":"page"},{"location":"#","page":"Home","title":"Home","text":"尽管文档中涉及的代码都是可以运行的，但是为了加深理解，最好在阅读本文档之前先对 Julia 及其语法有一些基本的认识，以下是一些我认为比较好的 参考材料：","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Julia 官方文档 属于最权威的教程及参考材料，绝大部分开发者（包括我）  都是通过该文档来学习 Julia 的。其缺点是想要阅读它需要有一些其他语言的开发经验。\nJuliaBox Tutorials 是 Julia Computing 发布的一系列入门教程， Julia 语言早期的核心开发者都任职于 Julia Computing 中，在 YouTube 上能找到配套视频教程。\nJulia 编程基础 是目前为数不多的比较好的中文 Julia 语言入门材料。其缺点很明显： 它仅仅只是对语言本身的介绍，可以理解为 Julia 官方文档的简易版本。其优点也非常明显：适合初学者。","category":"page"},{"location":"#参考文献-1","page":"Home","title":"参考文献","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"[1] Gonzalez, Rafael C., Richard E. Woods, and Barry R. Masters. \"Digital image processing third edition.\" Pearson (2008). 中文版\n[2] Gonzalez, Rafael C., and Richard E. Woods \"Digital image processing fourth edition.\" Pearson (2017).","category":"page"}]
}
